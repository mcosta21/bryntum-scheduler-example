!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("bryntum-scheduler/scheduler.lite.umd.js")):"function"==typeof define&&define.amd?define("bryntum-angular-shared",["exports","@angular/core","bryntum-scheduler/scheduler.lite.umd.js"],t):t(e["bryntum-angular-shared"]={},e.ng.core,e.scheduler.lite.umd.js)}(this,function(e,t,i){"use strict";function u(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,u=n.call(e),o=[];try{for(;(void 0===t||0<t--)&&!(r=u.next()).done;)o.push(r.value)}catch(s){i={error:s}}finally{try{r&&!r.done&&(n=u["return"])&&n.call(u)}finally{if(i)throw i.error}}return o}var n=(r.prototype.ngOnInit=function(){var t=this;this.button=i.WidgetHelper.createWidget({type:"button",appendTo:this.elementRef.nativeElement,cls:this.cls,color:this.color,icon:this.icon,onAction:this.onAction,onClick:function(e){return t.click.emit(e)},pressed:this.pressed,text:this.text,toggleable:this.toggleable,toggleGroup:this.toggleGroup,tooltip:this.tooltip,disabled:this.disabled})},r.prototype.ngOnChanges=function(e){var n=this;this.button&&Object.entries(e).forEach(function(e){var t=u(e,2),e=t[0],t=t[1].currentValue;n.button[e]=t})},r.prototype.ngOnDestroy=function(){this.button&&this.button.destroy()},r.decorators=[{type:t.Component,args:[{selector:"bry-button",template:""}]}],r.ctorParameters=function(){return[{type:t.ElementRef}]},r.propDecorators={cls:[{type:t.Input}],color:[{type:t.Input}],disabled:[{type:t.Input}],icon:[{type:t.Input}],pressed:[{type:t.Input}],text:[{type:t.Input}],toggleable:[{type:t.Input}],toggleGroup:[{type:t.Input}],tooltip:[{type:t.Input}],click:[{type:t.Output}],onAction:[{type:t.Input}]},r);function r(e){this.color="b-orange b-raised",this.click=new t.EventEmitter,this.onAction=function(){},this.elementRef=e}var o=(s.prototype.ngOnInit=function(){var e=this;i.Fullscreen.enabled&&(this.button=i.WidgetHelper.createWidget({type:"button",appendTo:this.elementRef.nativeElement,icon:"b-icon b-icon-fullscreen",tooltip:"Fullscreen",toggleable:!0,cls:"b-blue b-raised",onToggle:function(e){e.pressed?i.Fullscreen.request(document.documentElement):i.Fullscreen.exit()}}),i.Fullscreen.onFullscreenChange(function(){e.button.pressed=i.Fullscreen.isFullscreen}))},s.prototype.ngOnDestroy=function(){this.button&&this.button.destroy()},s.decorators=[{type:t.Component,args:[{selector:"bry-fullscreen",template:""}]}],s.ctorParameters=function(){return[{type:t.ElementRef}]},s);function s(e){this.elementRef=e}var a=(Object.defineProperty(p.prototype,"schedulerEngine",{get:function(){return console.warn("schedulerEngine is deprecated. Use schedulerInstance instead."),this.schedulerInstance},enumerable:!0,configurable:!0}),p.prototype.ngOnInit=function(){var e,t=this,n={appendTo:this.elementRef.nativeElement,listeners:{catchAll:function(e){"eventselectionchange"===e.type&&(this.selectedEvent=e.selected.length?e.selected[0].name:""),this.onSchedulerEvents.emit(e)},thisObj:this},features:{}};this.features.forEach(function(e){e in t&&(n.features[e.replace(t.featureRe,"")]=t[e])}),this.configs.forEach(function(e){e in t&&("schedulerId"===e&&t[e]?n.id=t[e]:n[e]=t[e])}),n.partner&&"string"==typeof n.partner&&(e=(e=window.bryntum)&&e.get&&e.get(n.partner),n.partner=e||undefined);var r={};["resources","events","assignments","dependencies","timeRanges","resourceTimeRanges"].forEach(function(e){n[e]&&(r[e]=n[e],delete n[e])}),this.schedulerInstance=new i.Scheduler(n),Object.assign(this.schedulerInstance,r)},p.prototype.ngOnChanges=function(e){var n=this,r=this;r.schedulerInstance&&Object.entries(e).forEach(function(e){var t=u(e,2),e=t[0],t=t[1].currentValue;r.configs.includes(e)&&(r.schedulerInstance[e]=t),r.features.includes(e)&&(r.schedulerInstance[e.replace(n.featureRe,"")]=t)})},p.prototype.removeEvent=function(){var e=this.schedulerInstance;e.eventStore.remove(e.selectedEvents),this.selectedEvent=""},p.prototype.addEvent=function(){var e=this.schedulerInstance,t=new e.eventStore.modelClass({resourceId:e.resourceStore.first.id,startDate:e.startDate,duration:1,durationUnit:"h",name:"New task",eventType:"Meeting"});e.editEvent(t)},p.prototype.ngOnDestroy=function(){this.schedulerInstance&&this.schedulerInstance.destroy()},p.decorators=[{type:t.Component,args:[{selector:"bry-scheduler",template:""}]}],p.ctorParameters=function(){return[{type:t.ElementRef}]},p.propDecorators={schedulerId:[{type:t.Input}],allowOverlap:[{type:t.Input}],animateRemovingRows:[{type:t.Input}],assignments:[{type:t.Input}],assignmentStore:[{type:t.Input}],autoAdjustTimeAxis:[{type:t.Input}],autoHeight:[{type:t.Input}],barMargin:[{type:t.Input}],columnLines:[{type:t.Input}],columns:[{type:t.Input}],contextMenuTriggerEvent:[{type:t.Input}],createEventOnDblClick:[{type:t.Input}],crudManager:[{type:t.Input}],defaultResourceImageName:[{type:t.Input}],dependencyStore:[{type:t.Input}],disableGridRowModelWarning:[{type:t.Input}],displayDateFormat:[{type:t.Input}],emptyText:[{type:t.Input}],enableDeleteKey:[{type:t.Input}],enableEventAnimations:[{type:t.Input}],enableRecurringEvents:[{type:t.Input}],enableTextSelection:[{type:t.Input}],endDate:[{type:t.Input}],endParamName:[{type:t.Input}],eventBarTextField:[{type:t.Input}],eventBodyTemplate:[{type:t.Input}],eventColor:[{type:t.Input}],eventLayout:[{type:t.Input}],eventRenderer:[{type:t.Input}],events:[{type:t.Input}],eventSelectionDisabled:[{type:t.Input}],eventStore:[{type:t.Input}],eventStyle:[{type:t.Input}],fillLastColumn:[{type:t.Input}],fillTicks:[{type:t.Input}],fullRowRefresh:[{type:t.Input}],getRowHeight:[{type:t.Input}],hasVisibleEvents:[{type:t.Input}],height:[{type:t.Input}],hideHeaders:[{type:t.Input}],horizontalEventSorterFn:[{type:t.Input}],loadMask:[{type:t.Input}],longPressTime:[{type:t.Input}],maintainSelectionOnDatasetChange:[{type:t.Input}],managedEventSizing:[{type:t.Input}],maxHeight:[{type:t.Input}],maxWidth:[{type:t.Input}],maxZoomLevel:[{type:t.Input}],milestoneAlign:[{type:t.Input}],milestoneCharWidth:[{type:t.Input}],milestoneLayoutMode:[{type:t.Input}],minHeight:[{type:t.Input}],minWidth:[{type:t.Input}],minZoomLevel:[{type:t.Input}],mode:[{type:t.Input}],multiEventSelect:[{type:t.Input}],partner:[{type:t.Input}],passStartEndParameters:[{type:t.Input}],presets:[{type:t.Input}],readOnly:[{type:t.Input}],removeUnassignedEvent:[{type:t.Input}],resizeToFitIncludesHeader:[{type:t.Input}],resourceColumns:[{type:t.Input}],resourceImagePath:[{type:t.Input}],resourceMargin:[{type:t.Input}],resources:[{type:t.Input}],resourceStore:[{type:t.Input}],resourceTimeRanges:[{type:t.Input}],responsiveLevels:[{type:t.Input}],rowHeight:[{type:t.Input}],scrollLeft:[{type:t.Input}],scrollTop:[{type:t.Input}],selectedEvents:[{type:t.Input}],selectionMode:[{type:t.Input}],showDirty:[{type:t.Input}],snap:[{type:t.Input}],snapRelativeToEventStartDate:[{type:t.Input}],startDate:[{type:t.Input}],startParamName:[{type:t.Input}],subGridConfigs:[{type:t.Input}],tickWidth:[{type:t.Input}],timeRanges:[{type:t.Input}],timeResolution:[{type:t.Input}],triggerSelectionChangeOnRemove:[{type:t.Input}],useInitialAnimation:[{type:t.Input}],viewportCenterDate:[{type:t.Input}],viewPreset:[{type:t.Input}],weekStartDay:[{type:t.Input}],width:[{type:t.Input}],workingTime:[{type:t.Input}],zoomLevel:[{type:t.Input}],zoomOnMouseWheel:[{type:t.Input}],zoomOnTimeAxisDoubleClick:[{type:t.Input}],cellEditFeature:[{type:t.Input}],cellMenuFeature:[{type:t.Input}],cellTooltipFeature:[{type:t.Input}],columnDragToolbarFeature:[{type:t.Input}],columnLinesFeature:[{type:t.Input}],columnPickerFeature:[{type:t.Input}],columnReorderFeature:[{type:t.Input}],columnResizeFeature:[{type:t.Input}],dependenciesFeature:[{type:t.Input}],dependencyEditFeature:[{type:t.Input}],eventDragCreateFeature:[{type:t.Input}],eventDragFeature:[{type:t.Input}],eventDragSelectFeature:[{type:t.Input}],eventEditFeature:[{type:t.Input}],eventFilterFeature:[{type:t.Input}],eventMenuFeature:[{type:t.Input}],eventResizeFeature:[{type:t.Input}],eventTooltipFeature:[{type:t.Input}],filterBarFeature:[{type:t.Input}],filterFeature:[{type:t.Input}],groupFeature:[{type:t.Input}],groupSummaryFeature:[{type:t.Input}],headerMenuFeature:[{type:t.Input}],headerZoomFeature:[{type:t.Input}],labelsFeature:[{type:t.Input}],nonWorkingTimeFeature:[{type:t.Input}],panFeature:[{type:t.Input}],pdfExportFeature:[{type:t.Input}],quickFindFeature:[{type:t.Input}],regionResizeFeature:[{type:t.Input}],resourceTimeRangesFeature:[{type:t.Input}],rowReorderFeature:[{type:t.Input}],scheduleMenuFeature:[{type:t.Input}],scheduleTooltipFeature:[{type:t.Input}],searchFeature:[{type:t.Input}],simpleEventEdit:[{type:t.Input}],sortFeature:[{type:t.Input}],stripeFeature:[{type:t.Input}],summaryFeature:[{type:t.Input}],timeAxisHeaderMenuFeature:[{type:t.Input}],timeRangesFeature:[{type:t.Input}],treeFeature:[{type:t.Input}],transitionDuration:[{type:t.Input}],selectedEvent:[{type:t.Output}],onSchedulerEvents:[{type:t.Output}]},p);function p(e){this.featureRe=/Feature$/,this.features=["cellEditFeature","cellMenuFeature","cellTooltipFeature","columnDragToolbarFeature","columnLinesFeature","columnPickerFeature","columnReorderFeature","columnResizeFeature","dependenciesFeature","dependencyEditFeature","eventDragCreateFeature","eventDragFeature","eventDragSelectFeature","eventEditFeature","eventFilterFeature","eventMenuFeature","eventResizeFeature","eventTooltipFeature","filterBarFeature","filterFeature","groupFeature","groupSummaryFeature","headerMenuFeature","headerZoomFeature","labelsFeature","nonWorkingTimeFeature","panFeature","pdfExportFeature","quickFindFeature","regionResizeFeature","resourceTimeRangesFeature","rowReorderFeature","scheduleMenuFeature","scheduleTooltipFeature","searchFeature","simpleEventEditFeature","sortFeature","stripeFeature","summaryFeature","timeAxisHeaderMenuFeature","timeRangesFeature","treeFeature"],this.configs=["allowOverlap","animateRemovingRows","assignments","assignmentStore","autoAdjustTimeAxis","autoHeight","barMargin","columnLines","columns","contextMenuTriggerEvent","createEventOnDblClick","crudManager","defaultResourceImageName","dependencyStore","disableGridRowModelWarning","displayDateFormat","emptyText","enableDeleteKey","enableEventAnimations","enableRecurringEvents","enableTextSelection","endDate","endParamName","eventBarTextField","eventBodyTemplate","eventColor","eventLayout","eventRenderer","events","eventSelectionDisabled","eventStore","eventStyle","fillLastColumn","fillTicks","fullRowRefresh","getRowHeight","hasVisibleEvents","height","hideHeaders","horizontalEventSorterFn","loadMask","longPressTime","maintainSelectionOnDatasetChange","managedEventSizing","maxHeight","maxWidth","maxZoomLevel","milestoneAlign","milestoneCharWidth","milestoneLayoutMode","minHeight","minWidth","minZoomLevel","mode","multiEventSelect","partner","passStartEndParameters","presets","readOnly","removeUnassignedEvent","resizeToFitIncludesHeader","resourceColumns","resourceImagePath","resourceMargin","resources","resourceStore","resourceTimeRanges","responsiveLevels","rowHeight","scrollLeft","scrollTop","selectedEvents","selectionMode","showDirty","snap","snapRelativeToEventStartDate","startDate","startParamName","subGridConfigs","tickWidth","timeRanges","timeResolution","triggerSelectionChangeOnRemove","useInitialAnimation","viewportCenterDate","viewPreset","weekStartDay","width","workingTime","zoomLevel","zoomOnMouseWheel","zoomOnTimeAxisDoubleClick","schedulerId","transitionDuration"],this.allowOverlap=!0,this.autoAdjustTimeAxis=!0,this.autoHeight=!1,this.barMargin=5,this.columnLines=!0,this.createEventOnDblClick=!0,this.disableGridRowModelWarning=!1,this.enableDeleteKey=!0,this.enableEventAnimations=!0,this.enableRecurringEvents=!1,this.enableTextSelection=!1,this.eventBarTextField="name",this.eventColor="green",this.eventSelectionDisabled=!1,this.eventStyle="plain",this.fillLastColumn=!0,this.fullRowRefresh=!0,this.hideHeaders=!1,this.loadMask="Loading...",this.longPressTime=400,this.maintainSelectionOnDatasetChange=!0,this.managedEventSizing=!0,this.milestoneCharWidth=10,this.milestoneLayoutMode="default",this.readOnly=!1,this.removeUnassignedEvent=!0,this.resizeToFitIncludesHeader=!0,this.rowHeight=50,this.showDirty=!1,this.snapRelativeToEventStartDate=!1,this.triggerSelectionChangeOnRemove=!1,this.useInitialAnimation=!0,this.viewPreset="hourAndDay",this.zoomOnMouseWheel=!0,this.zoomOnTimeAxisDoubleClick=!0,this.cellEditFeature=!0,this.cellTooltipFeature=!0,this.columnDragToolbarFeature=!0,this.columnLinesFeature=!0,this.columnPickerFeature=!0,this.columnReorderFeature=!0,this.columnResizeFeature=!0,this.dependenciesFeature=!1,this.dependencyEditFeature=!1,this.eventDragCreateFeature=!0,this.eventDragFeature=!0,this.eventEditFeature=!0,this.eventFilterFeature=!0,this.eventMenuFeature=!0,this.eventResizeFeature=!0,this.eventTooltipFeature=!0,this.groupFeature=!0,this.scheduleMenuFeature=!0,this.scheduleTooltipFeature=!0,this.sortFeature=!0,this.timeRangesFeature=!0,this.selectedEvent="",this.onSchedulerEvents=new t.EventEmitter,this.elementRef=e}var l=(c.prototype.ngOnInit=function(){this.slider=i.WidgetHelper.createWidget({type:"slider",appendTo:this.elementRef.nativeElement,max:this.max,min:this.min,onChange:this.onChange,showTooltip:this.showTooltip,showValue:this.showValue,step:this.step,text:this.text,value:this.value})},c.prototype.ngOnDestroy=function(){this.slider&&this.slider.destroy()},c.decorators=[{type:t.Component,args:[{selector:"bry-slider",template:""}]}],c.ctorParameters=function(){return[{type:t.ElementRef}]},c.propDecorators={max:[{type:t.Input}],min:[{type:t.Input}],onChange:[{type:t.Input}],showTooltip:[{type:t.Input}],showValue:[{type:t.Input}],step:[{type:t.Input}],text:[{type:t.Input}],value:[{type:t.Input}]},c);function c(e){this.max=100,this.min=0,this.step=5,this.text="Slider",this.value=0,this.elementRef=e}var d=(y.prototype.ngOnInit=function(){var t=this;Object.assign(t.config,{appendTo:t.elementRef.nativeElement,listeners:t.config.listeners||{catchAll:function(e){t.onWidgetEvents.emit(e)},thisObj:t}}),t.widget=i.WidgetHelper.createWidget(t.config)},y.prototype.ngOnDestroy=function(){this.widget&&this.widget.destroy&&this.widget.destroy()},y.decorators=[{type:t.Component,args:[{selector:"bry-widget",template:""}]}],y.ctorParameters=function(){return[{type:t.ElementRef}]},y.propDecorators={config:[{type:t.Input}],onWidgetEvents:[{type:t.Output}]},y);function y(e){this.onWidgetEvents=new t.EventEmitter,this.elementRef=e}var h=(m.decorators=[{type:t.NgModule,args:[{declarations:[n,o,a,l,d],imports:[],exports:[n,o,a,l,d]}]}],m);function m(){}e.BryntumAngularSharedModule=h,e.ButtonComponent=n,e.FullscreenComponent=o,e.SchedulerComponent=a,e.SliderComponent=l,e.WidgetComponent=d,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=bryntum-angular-shared.umd.min.js.map